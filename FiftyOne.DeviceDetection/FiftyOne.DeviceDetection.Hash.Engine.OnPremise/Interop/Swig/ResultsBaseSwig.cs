//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Interop {

internal class ResultsBaseSwig : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ResultsBaseSwig(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ResultsBaseSwig obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ResultsBaseSwig() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DeviceDetectionHashEngineModulePINVOKE.delete_ResultsBaseSwig(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public int getAvailableProperties() {
    int ret = DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getAvailableProperties(swigCPtr);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool containsProperty(string propertyName) {
    bool ret = DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_containsProperty(swigCPtr, propertyName);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public VectorStringSwig getProperties() {
    VectorStringSwig ret = new VectorStringSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getProperties(swigCPtr), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getPropertyName(int requiredPropertyIndex) {
    string ret = DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getPropertyName(swigCPtr, requiredPropertyIndex);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public VectorStringValuesSwig getValues(string propertyName) {
    VectorStringValuesSwig ret = new VectorStringValuesSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getValues__SWIG_0(swigCPtr, propertyName), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public VectorStringValuesSwig getValues(int requiredPropertyIndex) {
    VectorStringValuesSwig ret = new VectorStringValuesSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getValues__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public StringValueSwig getValueAsString(string propertyName) {
    StringValueSwig ret = new StringValueSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getValueAsString__SWIG_0(swigCPtr, propertyName), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public StringValueSwig getValueAsString(int requiredPropertyIndex) {
    StringValueSwig ret = new StringValueSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getValueAsString__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public BoolValueSwig getValueAsBool(string propertyName) {
    BoolValueSwig ret = new BoolValueSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getValueAsBool__SWIG_0(swigCPtr, propertyName), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public BoolValueSwig getValueAsBool(int requiredPropertyIndex) {
    BoolValueSwig ret = new BoolValueSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getValueAsBool__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IntegerValueSwig getValueAsInteger(string propertyName) {
    IntegerValueSwig ret = new IntegerValueSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getValueAsInteger__SWIG_0(swigCPtr, propertyName), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IntegerValueSwig getValueAsInteger(int requiredPropertyIndex) {
    IntegerValueSwig ret = new IntegerValueSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getValueAsInteger__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public DoubleValueSwig getValueAsDouble(string propertyName) {
    DoubleValueSwig ret = new DoubleValueSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getValueAsDouble__SWIG_0(swigCPtr, propertyName), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public DoubleValueSwig getValueAsDouble(int requiredPropertyIndex) {
    DoubleValueSwig ret = new DoubleValueSwig(DeviceDetectionHashEngineModulePINVOKE.ResultsBaseSwig_getValueAsDouble__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Pending) throw DeviceDetectionHashEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
