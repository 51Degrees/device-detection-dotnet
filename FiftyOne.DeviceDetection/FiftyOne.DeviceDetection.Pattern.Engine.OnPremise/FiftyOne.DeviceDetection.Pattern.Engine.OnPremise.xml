<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FiftyOne.DeviceDetection.Pattern.Engine.OnPremise</name>
    </assembly>
    <members>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Data.DeviceDataPattern.#ctor(Microsoft.Extensions.Logging.ILogger{FiftyOne.Pipeline.Engines.Data.AspectDataBase},FiftyOne.Pipeline.Core.FlowElements.IPipeline,FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngine,FiftyOne.Pipeline.Engines.Services.IMissingPropertyService)">
            <summary>
            Construct a new instance of the wrapper.
            </summary>
            <param name="logger"></param>
            <param name="pipeline"></param>
            <param name="engine"></param>
            <param name="missingPropertyService"></param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Data.FiftyOneAspectPropertyMetaDataPattern.#ctor(FiftyOne.Pipeline.Engines.FlowElements.IAspectEngine,System.String,System.Type,System.String,System.Collections.Generic.IList{System.String},System.Boolean,FiftyOne.Pipeline.Engines.FiftyOne.Data.IComponentMetaData,FiftyOne.Pipeline.Engines.FiftyOne.Data.IValueMetaData,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="element"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="category"></param>
            <param name="dataTiersWherePresent"></param>
            <param name="available"></param>
            <param name="component"></param>
            <param name="defaultValue"></param>
            <param name="description"></param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Data.FiftyOneAspectPropertyMetaDataPattern.#ctor(FiftyOne.Pipeline.Engines.FlowElements.IAspectEngine,System.String,System.Type,System.String,System.Collections.Generic.IList{System.String},System.Boolean,FiftyOne.Pipeline.Engines.FiftyOne.Data.IComponentMetaData,FiftyOne.Pipeline.Engines.FiftyOne.Data.IValueMetaData,System.String,System.Byte,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="element"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="category"></param>
            <param name="dataTiersWherePresent"></param>
            <param name="available"></param>
            <param name="component"></param>
            <param name="defaultValue"></param>
            <param name="description"></param>
            <param name="displayOrder"></param>
            <param name="list"></param>
            <param name="mandatory"></param>
            <param name="obsolete"></param>
            <param name="show"></param>
            <param name="showValues"></param>
            <param name="url"></param>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Data.IDeviceDataPattern.Method">
            <summary>
            The method used to determine the result from the evidence
            provided e.g. exact or closest. Where multiple items of evidence
            are supplied, this returns the worst matching method that was used
            for an evidence item.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Data.IDeviceDataPattern.Rank">
            <summary>
            The lowest Rank of all the signatures in the results.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Data.IDeviceDataPattern.Difference">
            <summary>
            The total difference between the results returned and the
            target User-Agents. Where multiple evidence items are used, this is
            the total difference. This indicates the accuracy of the results.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Data.IDeviceDataPattern.SignaturesCompared">
            <summary>
            The total number of signatures compared to get a match for
            the target evidence provided.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Data.IDeviceDataPattern.GetValues(System.String)">
            <summary>
            Gets all values as a List of strings.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.MatchMethods">
            <summary>
            Enumeration of possible match methods used by the Pattern engine.
            </summary>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngine">
            <summary>
            Pattern device detection engine. This engine takes User-Agents and
            other relevant HTTP headers and returns properties about the device
            which produced them e.g. DeviceType or ReleaseDate.
            </summary>
        </member>
        <member name="E:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngine.RefreshCompleted">
            <summary>
            This event is fired whenever the data that this engine makes use
            of has been updated.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngine.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,FiftyOne.Pipeline.Engines.Data.IAspectEngineDataFile,FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Wrappers.IConfigSwigWrapper,FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Wrappers.IRequiredPropertiesConfigSwigWrapper,System.Func{FiftyOne.Pipeline.Core.FlowElements.IPipeline,FiftyOne.Pipeline.Core.FlowElements.FlowElementBase{FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Data.IDeviceDataPattern,FiftyOne.Pipeline.Engines.FiftyOne.Data.IFiftyOneAspectPropertyMetaData},FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Data.IDeviceDataPattern},System.String,FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Wrappers.ISwigFactory)">
            <summary>
            Construct a new instance of the Pattern engine.
            </summary>
            <param name="loggerFactory">Logger to use</param>
            <param name="dataFile">Meta data related to the data file</param>
            <param name="config">Configuration instance</param>
            <param name="properties">Properties to be initialised</param>
            <param name="deviceDataFactory">
            Method used to get an aspect data instance
            </param>
            <param name="tempDataFilePath">
            The directory to use when storing temporary copies of the 
            data file(s) used by this engine.
            </param>
            <param name="swigFactory">
            The factory object to use when creating swig wrapper instances.
            Usually a <see cref="T:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Wrappers.SwigFactory"/> instance.
            Unit tests can override this to mock behaviour as needed.
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngine.GetMetricProperties">
            <summary>
            Get the match metric properties. 
            </summary>
            <returns>Metric Properties</returns>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder">
            <summary>
            Builder for the <see cref="T:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngine"/>. All options
            for the engine should be set here.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Construct a new instance of the builder.
            </summary>
            <param name="loggerFactory">
            Factory used to create loggers for the engine
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,FiftyOne.Pipeline.Engines.Services.IDataUpdateService)">
            <summary>
            Construct a new instance of the builder.
            </summary>
            <param name="loggerFactory">
            Factory used to create loggers for the engine
            </param>
            <param name="dataUpdateService">
            Data update service used to keep the engine's data up to date.
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.SetReuseTempFile(System.Boolean)">
            <summary>
            Set whether or not an existing temp file should be used if one is
            found in the temp directory.
            </summary>
            <param name="reuse">True if an existing file should be used</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.SetUpdateMatchedUserAgent(System.Boolean)">
            <summary>
            Set whether or not the matched characters of the User-Agent should
            be stored to be returned in the results.
            </summary>
            <param name="update">
            True if the matched User-Agent should be stored
            </param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.SetPerformanceProfile(System.String)">
            <summary>
            Set the performance profile to use when constructing the data set.
            </summary>
            <param name="profileName">Name of the profile to use</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.SetPerformanceProfile(FiftyOne.Pipeline.Engines.PerformanceProfiles)">
            <summary>
            Set the performance profile to use when constructing the data set.
            </summary>
            <param name="profile">Profile to use</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.SetUserAgentCache(System.UInt32)">
            <summary>
            Set the size of the User-Agent cache to use within the Pattern
            engine. For a low concurrency environment, a larger cache will
            improve performance. However, in a high concurrency environment,
            no cache may be preferable.
            </summary>
            <param name="capacity">The size of the cache to use</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.SetConcurrency(System.UInt16)">
            <summary>
            Set the expected number of concurrent operations using the engine.
            This sets the concurrency of the internal caches to avoid excessive
            locking.
            </summary>
            <param name="concurrency">Expected concurrent accesses</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.SetClosestSignatures(System.Int32)">
            <summary>
            Set number of signatures that should be looked at when finding the
            closest matching signature.
            </summary>
            <param name="closestSignatures">Max compared signatures</param>
            <returns></returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.SetDifference(System.Int32)">
            <summary>
            Set the maximum difference to allow when processing HTTP headers.
            The difference is a combination of the difference in character
            position of matched substrings, and the difference in ASCII value
            of each character of matched substrings. By default this is 10.
            </summary>
            <param name="difference">Difference threshold</param>
            <returns>This builder</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.SetAllowUnmatched(System.Boolean)" -->
        <member name="M:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.FlowElements.DeviceDetectionPatternEngineBuilder.NewEngine(System.Collections.Generic.List{System.String})">
            <summary>
            Called by the 'BuildEngine' method to handle
            creation of the engine instance.
            </summary>
            <param name="properties"></param>
            <returns>
            An <see cref="T:FiftyOne.Pipeline.Engines.FlowElements.IAspectEngine"/>.
            </returns>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Interop.MapStringStringSwig.MapStringStringSwigEnumerator">
            Note that the IEnumerator documentation requires an InvalidOperationException to be thrown
            whenever the collection is modified. This has been done for changes in the size of the
            collection but not when one of the elements of the collection is modified as it is a bit
            tricky to detect unmanaged code that modifies the collection under our feet.
        </member>
        <member name="T:FiftyOne.DeviceDetection.Pattern.Engine.OnPremise.Interop.VectorStringSwig.VectorStringSwigEnumerator">
            Note that the IEnumerator documentation requires an InvalidOperationException to be thrown
            whenever the collection is modified. This has been done for changes in the size of the
            collection but not when one of the elements of the collection is modified as it is a bit
            tricky to detect unmanaged code that modifies the collection under our feet.
        </member>
    </members>
</doc>
